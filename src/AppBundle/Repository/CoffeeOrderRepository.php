<?php

namespace AppBundle\Repository;

use AppBundle\Entity\ApiUser;
use AppBundle\Entity\Coffee;
use AppBundle\Entity\CoffeeOrder;
use Doctrine\ORM\EntityManagerInterface;

/**
 * CoffeeOrderRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CoffeeOrderRepository
{
    protected $entityManger;

    function __construct(EntityManagerInterface $entityManager)
    {
        $this->entityManger = $entityManager;
    }

    /**
     * @param CoffeeOrder $coffeeOrder
     */
    public function save(CoffeeOrder $coffeeOrder)
    {
        $this->entityManger->persist($coffeeOrder);
        $this->entityManger->flush();
    }

    /**
     * @param CoffeeOrder $coffeeOrder
     */
    public function remove(CoffeeOrder $coffeeOrder)
    {
        $this->entityManger->remove($coffeeOrder);
        $this->entityManger->flush();
    }

    /**
     * @return array
     */
    public function getAllOrders()
    {
        $builder = $this->entityManger->createQueryBuilder();

        $query = $builder->select('coffee_order')
            ->from('AppBundle:CoffeeOrder', 'coffee_order')
            ->getQuery();

        return $query->getResult();
    }

    /**
     * @param $id
     * @return mixed
     */
    public function getOrderById($id)
    {
        $builder = $this->entityManger->createQueryBuilder();

        $query = $builder->select('coffee_order')
            ->from('AppBundle:CoffeeOrder', 'coffee_order')
            ->where('coffee_order.id = :id')
            ->setParameter('id', $id)
            ->getQuery();

        return $query->getOneOrNullResult();
    }

    /**
     * @param Coffee $coffee
     * @param ApiUser $user
     * @return mixed
     */
    public function getOrderByCoffeeAndUser(Coffee $coffee, ApiUser $user)
    {
        $builder = $this->entityManger->createQueryBuilder();

        $query = $builder->select('coffee_order')
            ->from('AppBundle:CoffeeOrder', 'coffee_order')
            ->leftJoin('coffee_order.coffee', 'coffee')
            ->leftJoin('coffee_order.apiUser', 'apiUser')
            ->where('coffee.id = :coffee_id')
            ->andWhere('apiUser.id = :user_id')
            ->setParameter('coffee_id', $coffee->getId())
            ->setParameter('user_id', $user->getId())
            ->getQuery();

        return $query->getOneOrNullResult();
    }
}
